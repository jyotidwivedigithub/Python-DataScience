Q1: What is Matplotlib? Why is it used? Name five plots that can be plotted using the Pyplot module of
    Matplotlib.
Ans. Matplotlib is a data visualization library in Python that provides tools to create a wide variety of plots 
     and charts. It is widely used in the scientific community, data analysts, and other fields where data visualization is required.

     Matplotlib can be used to create a range of plots such as line plots, scatter plots, bar plots, histograms, pie charts, box plots,
    heatmaps, and more .
    
     5-plots that can be plotted using the Pyplot module of
    Matplotlib are following...
        1.Line Plot: A line plot is used to visualize the relationship between two variables by connecting data points with a straight line.
        2.Scatter Plot: A scatter plot is used to visualize the relationship between two variables by plotting data points on a two-dimensional 
          coordinate system.
        3.Bar Plot: A bar plot is used to compare different categories of data by showing the height or length of bars corresponding to the data.
        4.Histogram: A histogram is used to visualize the distribution of data by dividing it into a set of bins and showing the frequency of data 
          points falling in each bin.
        5.Pie Chart: A pie chart is used to show the proportion of data in each category by dividing a circle into sectors, where the size of each 
        sector corresponds to the proportion of data in that category.
    
    
    
Q2: What is a scatter plot? Use the following code to generate data for x and y. Using this generated data
    plot a scatter plot.
    import numpy as np
    np.random.seed(3)
    x = 3 + np.random.normal(0, 2, 50)
    y = 3 + np.random.normal(0, 2, len(x))
    Note: Also add title, xlabel, and ylabel to the plot.
Ans.
   Scatter plot- A scatter plot is a visual representation of how two variables relate to each other and uses 
           dots to represent the relationship between them.
        
    import matplotlib.pyplot as plt
    import numpy as np
    np.random.seed(3)
    x = 3 + np.random.normal(0, 2, 50)
    y = 3 + np.random.normal(0, 2, len(x))
    plt.xlabel("x-axis")
    plt.ylabel("y-axis")
    plt.title("My Data")
    plt.scatter(x,y)
    plt.show()
    
    
    
Q3: Why is the subplot() function used? Draw four line plots using the subplot() function.
    Use the following data:
    import numpy as np
    For line 1: x = np.array([0, 1, 2, 3, 4, 5]) and y = np.array([0, 100, 200, 300, 400, 500])
    For line 2: x = np.array([0, 1, 2, 3, 4, 5]) and y = np.array([50, 20, 40, 20, 60, 70])
    For line 3: x = np.array([0, 1, 2, 3, 4, 5]) and y = np.array([10, 20, 30, 40, 50, 60])
    For line 4: x = np.array([0, 1, 2, 3, 4, 5]) and y = np.array([200, 350, 250, 550, 450, 150])
Ans.
    Subplot()- The subplot() function in Matplotlib is used to create multiple plots in the same figure. It allows us to create a grid of subplots.
    
     # Plot the first line plot
    import numpy as np
    import matplotlib.pyplot as plt
    x1 = np.array([0, 1, 2, 3, 4, 5])
    y1 = np.array([0, 100, 200, 300, 400, 500])
    fig = plt.figure()
    ax = fig.add_subplot()
    ax.plot(x1,y1 )

     # Plot the second line plot
    import numpy as np
    import matplotlib.pyplot as plt
    x2 = np.array([0, 1, 2, 3, 4, 5])
    y2 = np.array([50, 20, 40, 20, 60, 70])
    fig = plt.figure()
    ax = fig.add_subplot()
    ax.plot(x2,y2 )

     # Plot the third line plot
    import numpy as np
    import matplotlib.pyplot as plt
    x3 = np.array([0, 1, 2, 3, 4, 5])
    y3 = np.array([10, 20, 30, 40, 50, 60])
    fig = plt.figure()
    ax = fig.add_subplot()
    ax.plot(x3,y3 )
    
     # Plot the fourth line plot
    import numpy as np
    import matplotlib.pyplot as plt
    x4 = np.array([0, 1, 2, 3, 4, 5])
    y4 = np.array([200, 350, 250, 550, 450, 150])
    fig = plt.figure()
    ax = fig.add_subplot()
    ax.plot(x4,y4 )
    
     
    
Q4: What is a bar plot? Why is it used? Using the following data plot a bar plot and a horizontal bar plot.
    import numpy as np
    company = np.array(["Apple", "Microsoft", "Google", "AMD"])
    profit = np.array([3000, 8000, 1000, 10000])
Ans.
    Bar Plot-Bar plots are useful for visualizing data in a way that is easy to understand and interpret. 
           They are often used to show the distribution of data in different categories, to compare the values of different categories, and to show changes in data over time. 
    
    import matplotlib.pyplot as plt
    import numpy as np
    company = np.array(["Apple", "Microsoft", "Google", "AMD"])
    profit = np.array([3000, 8000, 1000, 10000])
    plt.bar(company,profit)
    
    
    
Q5: What is a box plot? Why is it used? Using the following data plot a box plot.
    box1 = np.random.normal(100, 10, 200)
    box2 = np.random.normal(90, 20, 200)
Ans. 
   Box Plot
    import matplotlib.pyplot as plt
    import numpy as np

    box1 = np.random.normal(100, 10, 200)
    box2 = np.random.normal(90, 20, 200)
    data = [box1,box2]

    plt.boxplot(data, labels= ['Box1','Box2'])
    plt.show()
    
